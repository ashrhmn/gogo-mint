generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String?
  discordUsername      String?
  discordDiscriminator Int?
  walletAddress        String?   @unique
  projects             Project[]
  accessToken          String?
  refreshToken         String?

  @@unique([discordUsername, discordDiscriminator])
  @@map("users")
}

model Project {
  id             Int          @id @default(autoincrement())
  userId         Int
  name           String
  description    String?
  imageUrl       String?
  owner          User         @relation(fields: [userId], references: [id])
  address        String?
  whitelist      String[]
  nfts           NFT[]
  chainId        Int?
  collectionType String?
  uid            String?      @unique
  saleConfigs    SaleConfig[]

  @@unique([address, chainId])
  @@map("projects")
}

model SaleConfig {
  id               Int      @id @default(autoincrement())
  saleIdentifier   String   @unique
  enabled          Boolean
  saleType         String
  startTime        Int
  endTime          Int
  mintCharge       Float
  whitelist        String[]
  maxMintPerWallet Int
  maxMintInSale    Int
  Project          Project? @relation(fields: [projectId], references: [id])
  projectId        Int?

  @@map("sale_configs")
}

model CreatorDiscord {
  id            Int    @id @default(autoincrement())
  username      String
  discriminator Int

  @@unique([username, discriminator])
  @@map("creator_discords")
}

model NFT {
  id              Int                     @id @default(autoincrement())
  projectId       Int
  project         Project                 @relation(fields: [projectId], references: [id])
  signature       String?
  message         String?
  tokenId         Int?
  name            String
  description     String?
  imageUrl        String?
  backgroundColor String?
  externalUrl     String?
  properties      NFTMetadataProperties[]

  @@unique([projectId, tokenId])
  @@map("nfts")
}

model NFTMetadataProperties {
  id    Int    @id @default(autoincrement())
  type  String
  value String
  NFT   NFT?   @relation(fields: [nFTId], references: [id])
  nFTId Int?

  @@map("nft_metadata_properties")
}
