/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200164738038062001647833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611409806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100775760003560e01c8062fdd58e1461007c57806301ffc9a7146100a25780630e89341c146100c55780632eb2c2d6146100e55780634e1273f4146100fa578063a22cb4651461011a578063e985e9c51461012d578063f242432a14610169575b600080fd5b61008f61008a366004610e93565b61017c565b6040519081526020015b60405180910390f35b6100b56100b0366004610f86565b610213565b6040519015158152602001610099565b6100d86100d3366004610fc5565b610265565b6040516100999190611146565b6100f86100f3366004610d52565b6102f9565b005b61010d610108366004610ebc565b610390565b6040516100999190611105565b6100f8610128366004610e59565b6104f1565b6100b561013b366004610d20565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6100f8610177366004610df7565b610500565b60006001600160a01b0383166101ed5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061024457506001600160e01b031982166303a24d0760e21b145b8061025f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102749061126b565b80601f01602080910402602001604051908101604052809291908181526020018280546102a09061126b565b80156102ed5780601f106102c2576101008083540402835291602001916102ed565b820191906000526020600020905b8154815290600101906020018083116102d057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103155750610315853361013b565b61037c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101e4565b6103898585858585610587565b5050505050565b606081518351146103f55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101e4565b600083516001600160401b0381111561041e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610447578160200160208202803683370190505b50905060005b84518110156104e9576104ae85828151811061047957634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104a157634e487b7160e01b600052603260045260246000fd5b602002602001015161017c565b8282815181106104ce57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104e2816112d2565b905061044d565b509392505050565b6104fc338383610780565b5050565b6001600160a01b03851633148061051c575061051c853361013b565b61057a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101e4565b6103898585858585610861565b81518351146105e95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101e4565b6001600160a01b03841661060f5760405162461bcd60e51b81526004016101e4906111a1565b3360005b845181101561071257600085828151811061063e57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061066a57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106ba5760405162461bcd60e51b81526004016101e4906111e6565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106f7908490611253565b925050819055505050508061070b906112d2565b9050610613565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610762929190611118565b60405180910390a461077881878787878761098b565b505050505050565b816001600160a01b0316836001600160a01b031614156107f45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101e4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108875760405162461bcd60e51b81526004016101e4906111a1565b33600061089385610aff565b905060006108a085610aff565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108e35760405162461bcd60e51b81526004016101e4906111e6565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610920908490611253565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610980848a8a8a8a8a610b58565b505050505050505050565b6001600160a01b0384163b156107785760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109cf9089908990889088908890600401611062565b602060405180830381600087803b1580156109e957600080fd5b505af1925050508015610a19575060408051601f3d908101601f19168201909252610a1691810190610fa9565b60015b610ac657610a25611319565b806308c379a01415610a5f5750610a3a611331565b80610a455750610a61565b8060405162461bcd60e51b81526004016101e49190611146565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101e4565b6001600160e01b0319811663bc197c8160e01b14610af65760405162461bcd60e51b81526004016101e490611159565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b4757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156107785760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b9c90899089908890889088906004016110c0565b602060405180830381600087803b158015610bb657600080fd5b505af1925050508015610be6575060408051601f3d908101601f19168201909252610be391810190610fa9565b60015b610bf257610a25611319565b6001600160e01b0319811663f23a6e6160e01b14610af65760405162461bcd60e51b81526004016101e490611159565b80356001600160a01b0381168114610c3957600080fd5b919050565b600082601f830112610c4e578081fd5b81356020610c5b82611230565b604051610c6882826112a6565b8381528281019150858301600585901b87018401881015610c87578586fd5b855b85811015610ca557813584529284019290840190600101610c89565b5090979650505050505050565b600082601f830112610cc2578081fd5b81356001600160401b03811115610cdb57610cdb611303565b604051610cf2601f8301601f1916602001826112a6565b818152846020838601011115610d06578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d32578182fd5b610d3b83610c22565b9150610d4960208401610c22565b90509250929050565b600080600080600060a08688031215610d69578081fd5b610d7286610c22565b9450610d8060208701610c22565b935060408601356001600160401b0380821115610d9b578283fd5b610da789838a01610c3e565b94506060880135915080821115610dbc578283fd5b610dc889838a01610c3e565b93506080880135915080821115610ddd578283fd5b50610dea88828901610cb2565b9150509295509295909350565b600080600080600060a08688031215610e0e578081fd5b610e1786610c22565b9450610e2560208701610c22565b9350604086013592506060860135915060808601356001600160401b03811115610e4d578182fd5b610dea88828901610cb2565b60008060408385031215610e6b578182fd5b610e7483610c22565b915060208301358015158114610e88578182fd5b809150509250929050565b60008060408385031215610ea5578182fd5b610eae83610c22565b946020939093013593505050565b60008060408385031215610ece578182fd5b82356001600160401b0380821115610ee4578384fd5b818501915085601f830112610ef7578384fd5b81356020610f0482611230565b604051610f1182826112a6565b8381528281019150858301600585901b870184018b1015610f30578889fd5b8896505b84871015610f5957610f4581610c22565b835260019690960195918301918301610f34565b5096505086013592505080821115610f6f578283fd5b50610f7c85828601610c3e565b9150509250929050565b600060208284031215610f97578081fd5b8135610fa2816113ba565b9392505050565b600060208284031215610fba578081fd5b8151610fa2816113ba565b600060208284031215610fd6578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561100c57815187529582019590820190600101610ff0565b509495945050505050565b60008151808452815b8181101561103c57602081850181015186830182015201611020565b8181111561104d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061108e90830186610fdd565b82810360608401526110a08186610fdd565b905082810360808401526110b48185611017565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110fa90830184611017565b979650505050505050565b602081526000610fa26020830184610fdd565b60408152600061112b6040830185610fdd565b828103602084015261113d8185610fdd565b95945050505050565b602081526000610fa26020830184611017565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60006001600160401b0382111561124957611249611303565b5060051b60200190565b60008219821115611266576112666112ed565b500190565b600181811c9082168061127f57607f821691505b602082108114156112a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b03811182821017156112cb576112cb611303565b6040525050565b60006000198214156112e6576112e66112ed565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561132e57600481823e5160e01c5b90565b600060443d101561133f5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561136e57505050505090565b82850191508151818111156113865750505050505090565b843d87010160208285010111156113a05750505050505090565b6113af602082860101876112a6565b509095945050505050565b6001600160e01b0319811681146113d057600080fd5b5056fea26469706673582212207f4a6ceed79df4a856987763312bad06f8c793a14095620bc9edfb102a83bf6b64736f6c63430008040033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
